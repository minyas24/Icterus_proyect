line_col = "#F8F5F2")+
theme_minimal()+
theme(axis.text = element_text(size = 5))
map_ini
map_ini <- ggplot() +
geom_spatraster(data = alt) +
geom_sf(data = shp_clean, aes(color = after_stat("#F5191C"))) +
scale_fill_paletteer_c("grDevices::terrain.colors",
limits = c(0, 5000),
na.value = "transparent",
guide = "none")+
coord_sf(xlim = c(-120, -77), ylim = c(32, 10)) +
annotation_scale(location = "bl",
width_hint = 0.4,
unit_category = "metric",
bar_cols = c("#B5B5B5", "#EBEBEB"),
text_col = "#B5B5B5",
line_col = "#F8F5F2")+
theme_minimal()+
theme(axis.text = element_text(size = 5))
map_ini
alt <- worldclim_global(var="elev", res=0.5, path=tempdir())
map_ini <- ggplot() +
geom_spatraster(data = alt) +
geom_sf(data = shp_clean, aes(col = species), col = "#F5191C") +
scale_fill_paletteer_c("grDevices::terrain.colors",
limits = c(0, 5000),
na.value = "transparent",
guide = "none")+
coord_sf(xlim = c(-120, -77), ylim = c(32, 10)) +
annotation_scale(location = "bl",
width_hint = 0.4,
unit_category = "metric",
bar_cols = c("#B5B5B5", "#EBEBEB"),
text_col = "#B5B5B5",
line_col = "#F8F5F2")+
theme_minimal()+
theme(axis.text = element_text(size = 5))
map_ini
map_ini_close <- ggplot()+
geom_spatraster(data= alt)+
geom_sf(data= shp_clean, aes(col = species), col="#F5191C")+
scale_fill_paletteer_c("grDevices::terrain.colors",
limits = c(0, 5000),
na.value = "transparent",
name = "Elevación (m)",
breaks = seq(0, 5000, by = 1000))+
coord_sf(xlim = c(-97, -85), ylim = c(25, 15))+
annotation_north_arrow(
location = "tr",  # ← Agrega la ubicación (top-right recomendado)
which_north = "true",
style = north_arrow_fancy_orienteering(
fill = c("#F8F5F2", "#EBEBEB"),
line_col = "#B5B5B5"),
height = unit(1.2, "cm"),
width = unit(1.2, "cm")) +
annotation_scale(
location = "bl",
width_hint = 0.4,
unit_category = "metric",
bar_cols = c("#B5B5B5", "#EBEBEB"),
text_col = "#B5B5B5",
line_col = "#F8F5F2")+
theme_minimal()
map_ini_close
map_ini_close <- ggplot()+
geom_spatraster(data= alt)+
geom_sf(data= shp_clean, aes(col = species), col="#F5191C")+
scale_fill_paletteer_c("grDevices::terrain.colors",
limits = c(0, 5000),
na.value = "transparent",
name = "Elevacion (m)",
breaks = seq(0, 5000, by = 1000))+
coord_sf(xlim = c(-97, -85), ylim = c(25, 15))+
annotation_north_arrow(
location = "tr",  # ← Agrega la ubicación (top-right recomendado)
which_north = "true",
style = north_arrow_fancy_orienteering(
fill = c("#F8F5F2", "#EBEBEB"),
line_col = "#B5B5B5"),
height = unit(1.2, "cm"),
width = unit(1.2, "cm")) +
annotation_scale(
location = "bl",
width_hint = 0.4,
unit_category = "metric",
bar_cols = c("#B5B5B5", "#EBEBEB"),
text_col = "#B5B5B5",
line_col = "#F8F5F2")+
theme_minimal()
map_ini_close
path <- "R_Icterus/I_data/I_dominicensis.jpeg"
img <- readJPEG(path, native = TRUE)
cow_final <- ggdraw() +
draw_image(image = img,
x = 0.1, y = 0.1,
scale = 1)
cow_final
map_dist <- map_ini_close / ( cow_final | map_ini )  +
plot_annotation(
title = "Distribución de Icterus auratus",
subtitle = "Registros de ocurrencia sobre modelo de elevación",
caption = "Fuente: GBIF")
map_dist
ggsave("R_icterus/I_salidas/map_dist.png",
plot = map_dist,
dpi = 300,
width = 15,
height = 15,
units = "in")
map_dist <- map_ini_close / ( cow_final | map_ini )  +
plot_annotation(
title = "Distribucion de Icterus auratus",
subtitle = "Registros de ocurrencia sobre modelo de elevacion",
caption = "Fuente: GBIF")
map_dist
ggsave("R_icterus/I_salidas/map_dist.png",
plot = map_dist,
dpi = 300,
width = 15,
height = 15,
units = "in")
#saveRDS(env, "datos_wc/climate/wc2.1_30s/bio_enviromental.rds")
env <- readRDS("datos_wc/climate/wc2.1_30s/bio_enviromental.rds")
v_names <- vector()
for(i in 1:19){
v_names[i] <- paste0("bio_", sprintf("%02d", i))
}
v_names
names(env) <- v_names
names(env)
coord_elev <- shp_clean
puntos_sf <- st_as_sf(coord_elev, coords = c("lon", "lat"), crs = 4326)
elevaciones <- terra::extract(alt, puntos_sf)
elevaciones
puntos_sf$elev <- elevaciones$wc2.1_30s_elev
print(puntos_sf)
coord_bio <- shp_clean
env_icter <- terra::extract(env, coord_bio) #extract, capa ambiental y el lugar al que queremos enviar la información
print(env_icter)
df_icter <- cbind.data.frame(puntos_sf, env_icter)%>%
filter(!is.na(elev))%>% #quita NA
select(-ID)%>%
write_csv("R_Icterus/I_data/I_10_clean.csv")
print(df_icter)
df_icter <- read.csv("R_Icterus/I_data/I_10_clean.csv")
ocurrencias <- ggplot(df_icter, aes(x = decimalLongitude, y = decimalLatitude)) +
geom_point() +
labs(x = "Longitud",
y = "Latitud",
title = "Ocurrencias") +
theme_minimal()
ocurrencias
set.seed(123)
thin( loc.data = df_icter,
lat.col =  "decimalLatitude", long.col = "decimalLongitude",
spec.col = "species",
thin.par = 10, reps = 100,
locs.thinned.list.return = FALSE,
write.files = TRUE,
write.log.file = FALSE,
out.dir = here("R_Icterus", "I_data"),
out.base = "I_10")
set.seed(123)
thin( loc.data = df_icter,
lat.col =  "decimalLatitude", long.col = "decimalLongitude",
spec.col = "species",
thin.par = 10, reps = 100,
locs.thinned.list.return = FALSE,
write.files = TRUE,
write.log.file = FALSE,
out.dir = here("R_Icterus", "I_data"),
out.base = "I_10")
map_thin <- read_csv("R_Icterus/I_data/I_10_thin1.csv") %>%
ggplot(aes(decimalLongitude, decimalLatitude)) +
geom_point(color = "red") +
labs(x = "Longitud",
y = "Latitud",
title = "Aclaramiento") +
theme_minimal()
map_spthin <- ocurrencias + map_thin +
plot_annotation(title = "Distribución de Icterus dominicensis")
map_spthin
map_thin <- read_csv("R_Icterus/I_data/I_10_thin1.csv") %>%
ggplot(aes(decimalLongitude, decimalLatitude)) +
geom_point(color = "red") +
labs(x = "Longitud",
y = "Latitud",
title = "Aclaramiento") +
theme_minimal()
map_thin
map_spthin <- ocurrencias + map_thin +
plot_annotation(title = "Distribución de Icterus dominicensis")
map_spthin
map_spthin <- ocurrencias + map_thin +
plot_annotation(title = "Distribución de Icterus dominicensis")
map_spthin
map_spthin <- ocurrencias + map_thin +
plot_annotation(title = "Distribución de Icterus dominicensis")+
plot_layout(widths = c(1, 1))
map_spthin
map_spthin <- ocurrencias / map_thin +
plot_annotation(title = "Distribución de Icterus dominicensis")
map_spthin
map_spthin <- ocurrencias / map_thin +
plot_annotation(title = "Distribución de Icterus dominicensis")
map_spthin
map_spthin <- ocurrencias / map_thin +
plot_annotation(title = "Distribución de Icterus dominicensis")+
plot_layout(widths = c(1, 1))
map_spthin
map_spthin <- wrap_plots(ocurrencias, map_thin, nrow = 1) +  # ← wrap_plots explícito
plot_annotation(title = "Distribución de Icterus dominicensis")
map_spthin
map_spthin
ocurrencias <- ggplot(df_icter, aes(x = decimalLongitude, y = decimalLatitude)) +
geom_point() +
labs(x = "Longitud",
y = "Latitud",
title = "Ocurrencias") +
theme_minimal()
ocurrencias
map_thin <- read_csv("R_Icterus/I_data/I_10_thin1.csv") %>%
ggplot(aes(decimalLongitude, decimalLatitude)) +
geom_point(color = "red") +
labs(x = "Longitud",
y = "Latitud",
title = "Aclaramiento") +
theme_minimal()
map_thin
map_spthin <- ocurrencias + map_thin +
plot_annotation(title = "Distribución de Icterus dominicensis")
map_spthin
ggsave("R_icterus/I_salidas/mapthin_10.png",
plot = map_spthin,
dpi = 300,
width = 15,
height = 7,
units = "in")
map_spthin <- wrap_plots(ocurrencias, map_thin, nrow = 1) +  # ← wrap_plots explícito
plot_annotation(title = "Distribucion de Icterus dominicensis")
map_spthin
ggsave("R_icterus/I_salidas/mapthin_10.png",
plot = map_spthin,
dpi = 300,
width = 10,
height = 12,
units = "in")
map_spthin <- wrap_plots(ocurrencias, map_thin, nrow = 1) +  # ← wrap_plots explícito
plot_annotation(title = "Distribucion de Icterus dominicensis")
map_spthin
ggsave("R_icterus/I_salidas/mapthin_10.png",
plot = map_spthin,
dpi = 300,
width = 10,
height = 12,
units = "in")
map_spthin <- ocurrencias + map_thin +
plot_annotation(title = "Distribucion de Icterus dominicensis")
map_spthin
inicial <- df_icter
thin1 <-  read_csv("R_Icterus/I_data/I_10_thin1.csv")
icter_spthin <- thin1 %>%
left_join(inicial,
by = c("species" = "species",
"decimalLongitude" = "decimalLongitude",
"decimalLatitude" = "decimalLatitude" ))%>%
write_csv("R_Icterus/I_data/I_10_clean.csv")
which(is.na(icter_spthin$gbifID))  #Verificar NAs para buscar errores de no coincidencia
icter_spthin <- thin1 %>%
left_join(inicial,
by = c("species" = "species",
"decimalLongitude" = "decimalLongitude",
"decimalLatitude" = "decimalLatitude" ))%>%
write_csv("R_Icterus/I_data/I_10_clean.csv")
which(is.na(icter_spthin$gbifID))  #Verificar NAs para buscar errores de no coincidencia
datos_inicial <- nrow(inicial)
datos_fin <-nrow(thin1)
datos_elim <- datos_inicial - datos_fin
print(paste0("Thin/ Número inicial: ", datos_inicial, ", eliminados: ", datos_elim, ", Número final: ", datos_fin))
datos_inicial <- nrow(inicial)
datos_fin <-nrow(thin1)
datos_elim <- datos_inicial - datos_fin
print(paste0("Thin/ Numero inicial: ", datos_inicial, ", eliminados: ", datos_elim, ", Numero final: ", datos_fin))
matriz_cor <- cor(subset(icter_spthin, select = -c(species, decimalLatitude, decimalLongitude, month, year, gbifID, geometry)))
corr <- ggcorrplot(matriz_cor, #matriz de correlación
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors= c("#80FFFF", "#FFF7FF", "#FF80FF"),
ggtheme = theme_minimal())+
labs(title = "Matriz de correlación para Icterus dominicensis")
corr
ggsave("R_Icterus/I_salidas/corr.png",
plot = corr,
dpi = 300,
width = 12,
height = 9,
units = "in")
corr <- ggcorrplot(matriz_cor, #matriz de correlacion
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors= c("#80FFFF", "#FFF7FF", "#FF80FF"),
ggtheme = theme_minimal())+
labs(title = "Matriz de correlación para Icterus dominicensis")
corr
ggsave("R_Icterus/I_salidas/corr.png",
plot = corr,
dpi = 300,
width = 12,
height = 9,
units = "in")
corr <- ggcorrplot(matriz_cor, #matriz de correlacion
hc.order = FALSE,
type = "lower",
lab = TRUE,
lab_size = 3,
colors= c("#80FFFF", "#FFF7FF", "#FF80FF"),
ggtheme = theme_minimal())+
labs(title = "Matriz de correlacion para Icterus dominicensis")
corr
ggsave("R_Icterus/I_salidas/corr.png",
plot = corr,
dpi = 300,
width = 12,
height = 9,
units = "in")
var_elim <- findCorrelation(matriz_cor, cutoff = 0.7, names = TRUE)
var_elim
icter_corr <- icter_spthin %>%
select(-var_elim)%>%
write_csv("R_Icterus/I_data/I_10_corr.csv")
var_elim <- findCorrelation(matriz_cor, cutoff = 0.7, names = TRUE)
var_elim
icter_corr <- icter_spthin %>%
select(-all_of(var_elim))
write_csv("R_Icterus/I_data/I_10_corr.csv")
var_elim <- findCorrelation(matriz_cor, cutoff = 0.7, names = TRUE)
var_elim
icter_corr <- icter_spthin %>%
select(-all_of(var_elim))%>%
write_csv("R_Icterus/I_data/I_10_corr.csv")
df_kmeans <- icter_corr %>%
select(-month, -year, -gbifID, -geometry, -decimalLongitude, -decimalLatitude) %>%
select(where(is.numeric)) %>%
scale() %>%
as.data.frame()
df_kmeans
df_kmeans <- icter_corr %>%
select(-all_of(month, -year, -gbifID, -geometry, -decimalLongitude, -decimalLatitude)) %>%
select(where(is.numeric)) %>%
scale() %>%
as.data.frame()
df_kmeans <- icter_corr %>%
select(-all_of(month, year, gbifID, geometry, decimalLongitude, decimalLatitude)) %>%
select(where(is.numeric)) %>%
scale() %>%
as.data.frame()
df_kmeans <- icter_corr %>%
select(-month, -year, -gbifID, -geometry, -decimalLongitude, -decimalLatitude) %>%
select(where(is.numeric)) %>%
scale() %>%
as.data.frame()
df_kmeans
agrupamiento <- fviz_nbclust(df_kmeans, kmeans, method = "wss") +
geom_vline(xintercept = 5, linetype = 2)+
labs(title = "Clústers óptimos para I. dominicensis",
x = "Número de clusters k",
y = "Varianza dentro de los clústers")
agrupamiento
ggsave("R_Icterus/I_salidas/I_10_grup.png",
plot = agrupamiento,
dpi = 300,
width = 12,
height = 9,
units = "in")
agrupamiento <- fviz_nbclust(df_kmeans, kmeans, method = "wss") +
geom_vline(xintercept = 5, linetype = 2)+
labs(title = "Clústers optimos para I. dominicensis",
x = "Numero de clusters k",
y = "Varianza dentro de los clusters")
agrupamiento
ggsave("R_Icterus/I_salidas/I_10_grup.png",
plot = agrupamiento,
dpi = 300,
width = 12,
height = 9,
units = "in")
agrupamiento <- fviz_nbclust(df_kmeans, kmeans, method = "wss") +
geom_vline(xintercept = 5, linetype = 2)+
labs(title = "Clusters optimos para I. dominicensis",
x = "Numero de clusters k",
y = "Varianza dentro de los clusters")
agrupamiento
ggsave("R_Icterus/I_salidas/I_10_grup.png",
plot = agrupamiento,
dpi = 300,
width = 12,
height = 9,
units = "in")
set.seed(123)
icter_kmeans <- kmeans(df_kmeans, 5, nstart = 25)
table(icter_kmeans$cluster)
kmeans_grf <- fviz_cluster(icter_kmeans, data = df_kmeans,
palette = c("#0000FF", "#C870FF", "#74C9BC", "#7F8A8F", "#BB173A", "#C4D8F3", "#D33682","#8AD6E4"),
ggtheme = theme_minimal())+
labs(
title = "Analisis de Clusters",
subtitle = "Icterus dominicensis")
kmeans_grf
ggsave("R_Icterus/I_salidas/I_10_kmeans.png",
plot = kmeans_grf,
dpi = 300,
width = 12,
height = 9,
units = "in")
icter_clusters <- icter_corr %>%
mutate(cluster = icter_kmeans$cluster)%>%
filter(cluster != 1 ) %>%
write_csv("R_Icterus/I_data/I_10_kmeans.csv")
icter_clusters
datos_ini <- nrow(icter_corr)
datos_fin <-nrow(icter_clusters)
datos_elim <- datos_ini - datos_fin
print(paste0("Kmeans/ Número inicial: ", datos_ini, ", eliminados: ", datos_elim, ", Número final: ", datos_fin))
datos_ini <- nrow(icter_corr)
datos_fin <-nrow(icter_clusters)
datos_elim <- datos_ini - datos_fin
print(paste0("Kmeans/ Numero inicial: ", datos_ini, ", eliminados: ", datos_elim, ", Numero final: ", datos_fin))
map_spthin <- wrap_plots(ocurrencias, map_thin, nrow = 1) +  # ← wrap_plots explícito
plot_annotation(title = "Distribucion de Icterus dominicensis")
map_spthin
ggsave("R_icterus/I_salidas/mapthin_10.png",
plot = map_spthin,
dpi = 300,
width = 10,
height = 9,
units = "in")
map_spthin <- wrap_plots(ocurrencias, map_thin, nrow = 1) +  # ← wrap_plots explícito
plot_annotation(title = "Distribucion de Icterus dominicensis")
map_spthin
ggsave("R_icterus/I_salidas/mapthin_10.png",
plot = map_spthin,
dpi = 300,
width = 10,
height = 9,
units = "in")
map_spthin <- wrap_plots(ocurrencias, map_thin, nrow = 1) +  # ← wrap_plots explícito
plot_annotation(title = "Distribucion de Icterus dominicensis")
map_spthin
ggsave("R_icterus/I_salidas/mapthin_10.png",
plot = map_spthin,
dpi = 300,
width = 12,
height = 9,
units = "in")
map_spthin <- wrap_plots(ocurrencias, map_thin, nrow = 1) +  # ← wrap_plots explícito
plot_annotation(title = "Distribucion de Icterus dominicensis")
map_spthin
ggsave("R_icterus/I_salidas/mapthin_10.png",
plot = map_spthin,
dpi = 300,
width = 15,
height = 15,
units = "in")
map_spthin <- wrap_plots(ocurrencias, map_thin, nrow = 1) +  # ← wrap_plots explícito
plot_annotation(title = "Distribucion de Icterus dominicensis")
map_spthin
ggsave("R_icterus/I_salidas/mapthin_10.png",
plot = map_spthin,
dpi = 300,
width = 15,
height = 9,
units = "in")
map_spthin <- wrap_plots(ocurrencias, map_thin, nrow = 1) +  # ← wrap_plots explícito
plot_annotation(title = "Distribucion de Icterus dominicensis")
map_spthin
ggsave("R_icterus/I_salidas/mapthin_10.png",
plot = map_spthin,
dpi = 300,
width = 17,
height = 9,
units = "in")
update.packages(ask = FALSE)
update.packages(ask = FALSE)
df_cleaning_grf <- df_cleaning %>%
ggplot(aes(x = institutionCode,
fill = institutionCode))+
geom_bar()+
coord_flip()+
scale_fill_brewer(palette = Set3")+
theme_minimal()+
theme(legend.position = "none")+
labs(title = "Registros por Institucion",
x = "Institucion",
y = "Numero de Registros")
df_cleaning_grf
df_cleaning_grf <- df_cleaning %>%
ggplot(aes(x = institutionCode,
fill = institutionCode))+
geom_bar()+
coord_flip()+
scale_fill_brewer(palette = "Set3")+
theme_minimal()+
theme(legend.position = "none")+
labs(title = "Registros por Institucion",
x = "Institucion",
y = "Numero de Registros")
df_cleaning_grf
